{
  "permissions": {
    "allow": [
      // ===== DOCKER COMMANDS =====
      // Basic Docker operations
      "Bash(docker ps)",
      "Bash(docker ps *)",
      "Bash(docker ps -a*)",
      "Bash(docker ps --format*)",
      "Bash(docker ps | grep*)",
      "Bash(docker ps -a | grep*)",
      
      // Docker logs
      "Bash(docker logs *)",
      "Bash(docker logs * --tail*)",
      "Bash(docker logs * --tail=*)",
      "Bash(docker logs * 2>&1*)",
      "Bash(docker logs * | grep*)",
      "Bash(docker logs * | tail*)",
      "Bash(docker logs * | head*)",
      
      // Docker exec
      "Bash(docker exec *)",
      "Bash(docker exec * printenv*)",
      "Bash(docker exec * cat *)",
      "Bash(docker exec * ls *)",
      "Bash(docker exec * rm *)",
      "Bash(docker exec * n8n *)",
      "Bash(docker exec * sh -c *)",
      "Bash(docker exec * bash -c *)",
      "Bash(docker exec * /bin/bash *)",
      "Bash(docker exec * /bin/sh *)",
      "Bash(docker exec * printenv | grep*)",
      
      // Docker container management
      "Bash(docker start *)",
      "Bash(docker stop *)",
      "Bash(docker restart *)",
      "Bash(docker rm *)",
      "Bash(docker rm -f *)",
      "Bash(docker kill *)",
      
      // Docker inspection
      "Bash(docker inspect *)",
      "Bash(docker inspect * | jq*)",
      "Bash(docker inspect * | grep*)",
      
      // Docker volumes
      "Bash(docker volume ls*)",
      "Bash(docker volume inspect *)",
      "Bash(docker volume rm *)",
      "Bash(docker volume create *)",
      "Bash(docker volume prune*)",
      
      // Docker images
      "Bash(docker images*)",
      "Bash(docker pull *)",
      "Bash(docker build *)",
      "Bash(docker build --no-cache *)",
      "Bash(docker tag *)",
      "Bash(docker push *)",
      
      // Docker compose
      "Bash(docker compose *)",
      "Bash(docker compose up*)",
      "Bash(docker compose up -d*)",
      "Bash(docker compose down*)",
      "Bash(docker compose ps*)",
      "Bash(docker compose logs*)",
      "Bash(docker compose restart*)",
      "Bash(docker compose stop*)",
      "Bash(docker compose start*)",
      "Bash(docker compose build*)",
      "Bash(docker compose pull*)",
      "Bash(docker compose exec*)",
      "Bash(docker compose rm*)",
      "Bash(docker compose up -d --force-recreate*)",
      "Bash(docker compose build --no-cache*)",
      "Bash(docker-compose *)",
      
      // Docker system
      "Bash(docker system *)",
      "Bash(docker info*)",
      "Bash(docker version*)",
      
      // ===== SSH COMMANDS =====
      "Bash(ssh gmktec-k9 *)",
      "Bash(ssh root@gmktec-k9 *)",
      "Bash(ssh gmktec-k9 \"*\")",
      "Bash(ssh root@gmktec-k9 \"*\")",
      "Bash(ssh gmktec-k9 '*')",
      "Bash(ssh root@gmktec-k9 '*')",
      "Bash(ssh * 'cd * && *')",
      "Bash(ssh * \"cd * && *\")",
      "Bash(ssh * \"bash -s\" << *)",
      "Bash(ssh * \"sudo *\")",
      
      // SCP and RSYNC
      "Bash(scp * root@gmktec-k9:*)",
      "Bash(scp root@gmktec-k9:* *)",
      "Bash(rsync *)",
      "Bash(rsync -avz *)",
      "Bash(rsync -avz --exclude=* *)",
      "Bash(rsync -avz --delete *)",
      
      // ===== GIT COMMANDS =====
      "Bash(git status*)",
      "Bash(git add *)",
      "Bash(git add .*)",
      "Bash(git add -A*)",
      "Bash(git add -u*)",
      "Bash(git commit -m *)",
      "Bash(git commit -am *)",
      "Bash(git commit --amend*)",
      "Bash(git push*)",
      "Bash(git push origin *)",
      "Bash(git push -u origin *)",
      "Bash(git pull*)",
      "Bash(git pull origin *)",
      "Bash(git fetch*)",
      "Bash(git fetch --all*)",
      "Bash(git log*)",
      "Bash(git log --oneline*)",
      "Bash(git log --graph*)",
      "Bash(git diff*)",
      "Bash(git diff --staged*)",
      "Bash(git diff HEAD*)",
      "Bash(git checkout *)",
      "Bash(git checkout -b *)",
      "Bash(git branch*)",
      "Bash(git branch -a*)",
      "Bash(git branch -d *)",
      "Bash(git branch -D *)",
      "Bash(git merge *)",
      "Bash(git rebase *)",
      "Bash(git stash*)",
      "Bash(git stash pop*)",
      "Bash(git stash list*)",
      "Bash(git remote *)",
      "Bash(git remote -v*)",
      "Bash(git remote add *)",
      "Bash(git remote set-url *)",
      "Bash(git config *)",
      "Bash(git reset *)",
      "Bash(git clean *)",
      "Bash(git tag *)",
      "Bash(git show *)",
      "Bash(git blame *)",
      "Bash(git clone *)",
      "Bash(git init*)",
      
      // ===== FILE OPERATIONS =====
      "Bash(ls*)",
      "Bash(ls -la*)",
      "Bash(ls -l*)",
      "Bash(ls -a*)",
      "Bash(ls -lh*)",
      "Bash(ls -la */)",
      "Bash(ll*)",
      "Bash(cat *)",
      "Bash(cat -n *)",
      "Bash(less *)",
      "Bash(more *)",
      "Bash(head *)",
      "Bash(head -n *)",
      "Bash(head -*)",
      "Bash(tail *)",
      "Bash(tail -n *)",
      "Bash(tail -*)",
      "Bash(tail -f *)",
      "Bash(grep *)",
      "Bash(grep -r *)",
      "Bash(grep -i *)",
      "Bash(grep -n *)",
      "Bash(grep -E *)",
      "Bash(grep -v *)",
      "Bash(grep -A* -B* *)",
      "Bash(egrep *)",
      "Bash(fgrep *)",
      "Bash(sed *)",
      "Bash(sed -i *)",
      "Bash(sed -n *)",
      "Bash(sed -e *)",
      "Bash(awk *)",
      "Bash(cut *)",
      "Bash(sort *)",
      "Bash(uniq *)",
      "Bash(wc *)",
      "Bash(wc -l *)",
      "Bash(find *)",
      "Bash(find . -name *)",
      "Bash(find . -type *)",
      "Bash(find . -path *)",
      "Bash(cp *)",
      "Bash(cp -r *)",
      "Bash(cp -a *)",
      "Bash(cp -p *)",
      "Bash(mv *)",
      "Bash(rm *)",
      "Bash(rm -f *)",
      "Bash(rm -r *)",
      "Bash(rm -rf *)",
      "Bash(mkdir *)",
      "Bash(mkdir -p *)",
      "Bash(rmdir *)",
      "Bash(touch *)",
      "Bash(chmod *)",
      "Bash(chown *)",
      "Bash(diff *)",
      "Bash(tree *)",
      "Bash(pwd*)",
      "Bash(cd *)",
      "Bash(cd * && *)",
      "Bash(pushd *)",
      "Bash(popd*)",
      "Bash(basename *)",
      "Bash(dirname *)",
      "Bash(realpath *)",
      "Bash(readlink *)",
      
      // ===== CURL COMMANDS =====
      "Bash(curl *)",
      "Bash(curl -s *)",
      "Bash(curl -S *)",
      "Bash(curl -f *)",
      "Bash(curl -L *)",
      "Bash(curl -o *)",
      "Bash(curl -O *)",
      "Bash(curl -X GET *)",
      "Bash(curl -X POST *)",
      "Bash(curl -X PUT *)",
      "Bash(curl -X DELETE *)",
      "Bash(curl -X PATCH *)",
      "Bash(curl -H \"*\" *)",
      "Bash(curl -H '*' *)",
      "Bash(curl -d *)",
      "Bash(curl --data *)",
      "Bash(curl --data-binary *)",
      "Bash(curl --header *)",
      "Bash(curl --request *)",
      "Bash(curl -u *)",
      "Bash(curl --user *)",
      "Bash(curl -w *)",
      "Bash(curl --write-out *)",
      "Bash(curl -v *)",
      "Bash(curl --verbose *)",
      "Bash(curl -k *)",
      "Bash(curl --insecure *)",
      "Bash(curl -i *)",
      "Bash(curl --include *)",
      "Bash(curl * | jq*)",
      "Bash(curl * | grep*)",
      "Bash(curl * | head*)",
      "Bash(curl * | tail*)",
      
      // ===== NPM AND NODE =====
      "Bash(npm *)",
      "Bash(npm install*)",
      "Bash(npm install --save*)",
      "Bash(npm install --save-dev*)",
      "Bash(npm install -g*)",
      "Bash(npm ci*)",
      "Bash(npm run *)",
      "Bash(npm test*)",
      "Bash(npm start*)",
      "Bash(npm build*)",
      "Bash(npm run build*)",
      "Bash(npm run test*)",
      "Bash(npm run dev*)",
      "Bash(npm run lint*)",
      "Bash(npm list*)",
      "Bash(npm update*)",
      "Bash(npm audit*)",
      "Bash(npm fund*)",
      "Bash(npm init*)",
      "Bash(npx *)",
      "Bash(node *)",
      "Bash(node -v*)",
      "Bash(node --version*)",
      "Bash(node -e *)",
      "Bash(node scripts/*)",
      "Bash(node *.js*)",
      
      // ===== ENVIRONMENT VARIABLES =====
      "Bash(echo $*)",
      "Bash(echo \"$*\")",
      "Bash(echo '$*')",
      "Bash(echo *)",
      "Bash(export *)",
      "Bash(unset *)",
      "Bash(env*)",
      "Bash(env | grep*)",
      "Bash(printenv*)",
      "Bash(printenv | grep*)",
      "Bash(set*)",
      "Bash(source *)",
      "Bash(. *)",
      
      // With specific env vars from our session
      "Bash(STACK_MANAGER_* npm *)",
      "Bash(N8N_* npm *)",
      "Bash(POSTGRES_* npm *)",
      "Bash(NODE_ENV=* npm *)",
      
      // ===== JSON PROCESSING =====
      "Bash(jq *)",
      "Bash(jq .*)",
      "Bash(jq -r *)",
      "Bash(jq -c *)",
      "Bash(jq -s *)",
      "Bash(jq --tab*)",
      "Bash(* | jq)",
      "Bash(* | jq .)",
      "Bash(* | jq -r *)",
      "Bash(* | jq '.*')",
      "Bash(* | jq \".*\")",
      "Bash(* | jq '. | *')",
      
      // ===== PROCESS MANAGEMENT =====
      "Bash(ps *)",
      "Bash(ps aux*)",
      "Bash(ps -ef*)",
      "Bash(ps | grep*)",
      "Bash(pgrep *)",
      "Bash(kill *)",
      "Bash(kill -9 *)",
      "Bash(pkill *)",
      "Bash(killall *)",
      "Bash(jobs*)",
      "Bash(fg*)",
      "Bash(bg*)",
      "Bash(nohup *)",
      "Bash(sleep *)",
      "Bash(wait*)",
      
      // ===== SYSTEM COMMANDS =====
      "Bash(date*)",
      "Bash(date +*)",
      "Bash(whoami*)",
      "Bash(hostname*)",
      "Bash(uname *)",
      "Bash(which *)",
      "Bash(whereis *)",
      "Bash(id*)",
      "Bash(groups*)",
      "Bash(df *)",
      "Bash(du *)",
      "Bash(free*)",
      "Bash(top*)",
      "Bash(htop*)",
      "Bash(uptime*)",
      "Bash(w*)",
      "Bash(who*)",
      "Bash(last*)",
      "Bash(history*)",
      "Bash(alias*)",
      "Bash(type *)",
      
      // ===== NETWORK COMMANDS =====
      "Bash(ping *)",
      "Bash(netstat *)",
      "Bash(ss *)",
      "Bash(lsof *)",
      "Bash(lsof -i *)",
      "Bash(sudo lsof *)",
      "Bash(nslookup *)",
      "Bash(dig *)",
      "Bash(host *)",
      "Bash(wget *)",
      "Bash(nc -z *)",
      "Bash(telnet *)",
      "Bash(traceroute *)",
      "Bash(ip *)",
      "Bash(ifconfig*)",
      
      // ===== PACKAGE MANAGERS =====
      "Bash(apt *)",
      "Bash(apt-get *)",
      "Bash(apt update*)",
      "Bash(apt install *)",
      "Bash(apt remove *)",
      "Bash(apt search *)",
      "Bash(apt list *)",
      "Bash(sudo apt *)",
      "Bash(sudo apt-get *)",
      "Bash(dpkg *)",
      "Bash(snap *)",
      
      // ===== OPENSSL =====
      "Bash(openssl *)",
      "Bash(openssl rand *)",
      "Bash(openssl x509 *)",
      "Bash(openssl req *)",
      "Bash(openssl genrsa *)",
      
      // ===== GITHUB CLI =====
      "Bash(gh *)",
      "Bash(gh auth *)",
      "Bash(gh auth login*)",
      "Bash(gh auth status*)",
      "Bash(gh repo *)",
      "Bash(gh repo view*)",
      "Bash(gh repo list*)",
      "Bash(gh repo clone*)",
      "Bash(gh repo create*)",
      "Bash(gh pr *)",
      "Bash(gh pr create*)",
      "Bash(gh pr list*)",
      "Bash(gh pr view*)",
      "Bash(gh issue *)",
      "Bash(gh api *)",
      "Bash(gh workflow *)",
      "Bash(gh release *)",
      
      // ===== SCRIPT EXECUTION =====
      "Bash(bash *)",
      "Bash(sh *)",
      "Bash(./deploy-latest-updates.sh*)",
      "Bash(./*.sh*)",
      "Bash(./scripts/*)",
      "Bash(bash scripts/*)",
      "Bash(sh scripts/*)",
      "Bash(source scripts/*)",
      
      // ===== PIPING AND REDIRECTION =====
      "Bash(* | *)",
      "Bash(* > *)",
      "Bash(* >> *)",
      "Bash(* 2>&1*)",
      "Bash(* 2> *)",
      "Bash(* < *)",
      "Bash(* << *)",
      "Bash(* <<< *)",
      "Bash(* && *)",
      "Bash(* || *)",
      "Bash(* ; *)",
      
      // ===== SUDO COMMANDS (LIMITED) =====
      "Bash(sudo docker *)",
      "Bash(sudo systemctl *)",
      "Bash(sudo journalctl *)",
      "Bash(sudo service *)",
      "Bash(sudo bash -c *)",
      "Bash(sudo sh -c *)",
      
      // ===== SYSTEMCTL AND JOURNALCTL =====
      "Bash(systemctl *)",
      "Bash(systemctl status *)",
      "Bash(systemctl start *)",
      "Bash(systemctl stop *)",
      "Bash(systemctl restart *)",
      "Bash(journalctl *)",
      "Bash(journalctl -u *)",
      "Bash(journalctl -f*)",
      "Bash(journalctl --since *)",
      
      // ===== COMPRESSION =====
      "Bash(tar *)",
      "Bash(gzip *)",
      "Bash(gunzip *)",
      "Bash(zip *)",
      "Bash(unzip *)",
      
      // ===== TEXT PROCESSING =====
      "Bash(tr *)",
      "Bash(fold *)",
      "Bash(column *)",
      "Bash(paste *)",
      "Bash(join *)",
      "Bash(split *)",
      "Bash(csplit *)",
      "Bash(tee *)",
      "Bash(xargs *)",
      
      // ===== MACROS AND SPECIAL =====
      "Bash(printf *)",
      "Bash(test *)",
      "Bash([ *)",
      "Bash([[ *)",
      "Bash(true*)",
      "Bash(false*)",
      "Bash(yes*)",
      "Bash(seq *)",
      "Bash(shuf *)",
      "Bash(bc *)",
      "Bash(expr *)",
      
      // ===== SPECIFIC COMMANDS FROM SESSION =====
      "Bash(open -a Docker*)",
      "Bash(open -a *)",
      "Bash(timeout *)",
      "Bash(time *)",
      "Bash(watch *)",
      
      // ===== FILE TOOLS =====
      "Read(**)",
      "Edit(**)",
      "MultiEdit(**)",
      "Write(**)",
      "Glob(**)",
      "Grep(**)",
      "LS(**)",
      
      // ===== NOTEBOOK TOOLS =====
      "NotebookRead(**)",
      "NotebookEdit(**)",
      
      // ===== WEB TOOLS =====
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:localhost)",
      "WebFetch(domain:127.0.0.1)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:n8n.io)",
      "WebFetch(domain:*.nextsteptek.com)",
      "WebFetch(domain:gmktec-k9)",
      "WebFetch(domain:api.openai.com)",
      "WebFetch(domain:api.anthropic.com)",
      "WebSearch(**)",
      
      // ===== TODO TOOLS =====
      "TodoRead()",
      "TodoWrite(**)",
      
      // ===== TASK TOOL =====
      "Task(**)",
      
      // ===== CLAUDE SPECIFIC =====
      "Bash(claude *)",
      "Bash(claude config *)",
      "Bash(claude code *)"
    ],
    "deny": [
      // ===== DESTRUCTIVE OPERATIONS =====
      "Bash(rm -rf /*)",
      "Bash(rm -rf /)",
      "Bash(sudo rm -rf /*)",
      "Bash(sudo rm -rf /)",
      "Bash(dd if=/dev/zero of=/dev/*)",
      "Bash(dd if=/dev/random of=/dev/*)",
      "Bash(mkfs*)",
      "Bash(fdisk*)",
      "Bash(parted*)",
      
      // ===== FORK BOMBS =====
      "Bash(:(){ :|:& };:*)",
      "Bash(*fork*bomb*)",
      
      // ===== SYSTEM CORRUPTION =====
      "Bash(> /dev/sda*)",
      "Bash(> /dev/nvme*)",
      "Bash(> /dev/sd*)",
      "Bash(cat /dev/urandom > *)",
      
      // ===== CREDENTIAL THEFT =====
      "Bash(* | nc -l*)",
      "Bash(* | netcat -l*)",
      "Bash(* | socat *)",
      "Bash(* | base64 -d | sh*)",
      "Bash(* | base64 -d | bash*)",
      "Bash(curl * | sh*)",
      "Bash(curl * | bash*)",
      "Bash(wget * | sh*)",
      "Bash(wget * | bash*)",
      
      // ===== USER MANAGEMENT =====
      "Bash(sudo passwd*)",
      "Bash(passwd*)",
      "Bash(sudo useradd*)",
      "Bash(sudo userdel*)",
      "Bash(sudo usermod*)",
      "Bash(sudo groupadd*)",
      "Bash(sudo groupdel*)",
      "Bash(sudo adduser*)",
      "Bash(sudo deluser*)",
      
      // ===== SYSTEM MODIFICATION =====
      "Bash(sudo chmod 777 /*)",
      "Bash(sudo chown * /*)",
      "Bash(sudo rm /etc/*)",
      "Bash(sudo rm -rf /etc/*)",
      "Bash(sudo rm /bin/*)",
      "Bash(sudo rm /usr/*)",
      "Bash(sudo > /etc/*)",
      
      // ===== NETWORK BACKDOORS =====
      "Bash(nc -l*)",
      "Bash(netcat -l*)",
      "Bash(socat*)",
      "Bash(nmap*)",
      "Bash(masscan*)",
      
      // ===== CRYPTO MINING =====
      "Bash(*xmrig*)",
      "Bash(*monero*)",
      "Bash(*bitcoin*)",
      "Bash(*miner*)",
      
      // ===== GIT DANGEROUS OPS =====
      "Bash(git push --force origin master*)",
      "Bash(git push --force origin main*)",
      "Bash(git push -f origin master*)",
      "Bash(git push -f origin main*)",
      "Bash(git reset --hard origin/master*)",
      "Bash(git reset --hard origin/main*)",
      
      // ===== AWS/CLOUD CREDENTIAL ACCESS =====
      "Bash(cat ~/.aws/*)",
      "Bash(cat ~/.ssh/id_*)",
      "Bash(cat /root/.ssh/*)",
      
      // ===== ENVIRONMENT VARIABLE DUMPS =====
      "Bash(env | base64*)",
      "Bash(printenv | base64*)",
      "Bash(set | base64*)",
      
      // ===== REVERSE SHELLS =====
      "Bash(bash -i >& /dev/tcp/*)",
      "Bash(sh -i >& /dev/tcp/*)",
      "Bash(python -c 'import socket*)",
      "Bash(php -r '$sock*)",
      "Bash(ruby -rsocket*)",
      "Bash(perl -e 'use Socket*)"
    ]
  }
}